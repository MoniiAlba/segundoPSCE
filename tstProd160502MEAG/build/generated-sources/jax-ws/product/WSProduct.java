
package product;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSProduct", targetNamespace = "http://web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSProduct {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://web/", className = "product.Remove")
    @Action(input = "http://web/WSProduct/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        Product entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://web/", className = "product.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://web/", className = "product.CountResponse")
    @Action(input = "http://web/WSProduct/countRequest", output = "http://web/WSProduct/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns product.Product
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://web/", className = "product.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://web/", className = "product.FindResponse")
    @Action(input = "http://web/WSProduct/findRequest", output = "http://web/WSProduct/findResponse")
    public Product find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://web/", className = "product.Create")
    @Action(input = "http://web/WSProduct/create")
    public void create(
        @WebParam(name = "entity", targetNamespace = "")
        Product entity);

    /**
     * 
     * @return
     *     returns java.util.List<product.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://web/", className = "product.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://web/", className = "product.FindAllResponse")
    @Action(input = "http://web/WSProduct/findAllRequest", output = "http://web/WSProduct/findAllResponse")
    public List<Product> findAll();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://web/", className = "product.Edit")
    @Action(input = "http://web/WSProduct/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        Product entity);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<product.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://web/", className = "product.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://web/", className = "product.FindRangeResponse")
    @Action(input = "http://web/WSProduct/findRangeRequest", output = "http://web/WSProduct/findRangeResponse")
    public List<Product> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

}
